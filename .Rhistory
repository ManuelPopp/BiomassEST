library("readxl")
dat <- "C:/Users/Manuel/Nextcloud/Geobotanik/dat/Biomass_estimation.xlsx"
Parameters_RCD <- read_excel(dat, sheet = "Parameters_RCD")
Parameters_RCD <- as.data.frame(Parameters_RCD)
Parameters_H <- read_excel(dat, sheet = "Parameters_H")
Parameters_H <- as.data.frame(Parameters_H)
Parameters_RCD2H <- read_excel(dat, sheet = "Parameters_RCD2H")
Parameters_RCD2H <- as.data.frame(Parameters_RCD2H)
Citations <- read_excel(dat, sheet = "Citations")
Citations <- as.data.frame(Citations)
Corrections <- read_excel(dat, sheet = "Corrections")
Corrections <- as.data.frame(Corrections)
Conifers <- read_excel(dat, sheet = "Conifers")
Conifers <- as.data.frame(Conifers)
help(usethis::use_data)
?usethis::use_data
usethis::use_data(Parameters_RCD, Parameters_H, Parameters_RCD2H, Citations, Corrections, Conifers, name = "DATASET", mtcars, internal = TRUE)
dat <- "C:/Users/Manuel/Nextcloud/Geobotanik/dat/Biomass_estimation.xlsx"
Parameters_RCD <- read_excel(dat, sheet = "Parameters_RCD")
Parameters_RCD <- as.data.frame(Parameters_RCD)
Parameters_H <- read_excel(dat, sheet = "Parameters_H")
Parameters_H <- as.data.frame(Parameters_H)
Parameters_RCD2H <- read_excel(dat, sheet = "Parameters_RCD2H")
Parameters_RCD2H <- as.data.frame(Parameters_RCD2H)
Citations <- read_excel(dat, sheet = "Citations")
Citations <- as.data.frame(Citations)
Corrections <- read_excel(dat, sheet = "Corrections")
Corrections <- as.data.frame(Corrections)
Conifers <- read_excel(dat, sheet = "Conifers")
Conifers <- as.data.frame(Conifers)
usethis::use_data(Parameters_RCD, name = "DATASET", mtcars, internal = TRUE)
library("readxl")
dat <- "C:/Users/Manuel/Nextcloud/Geobotanik/dat/Biomass_estimation.xlsx"
Parameters_RCD <- read_excel(dat, sheet = "Parameters_RCD")
Parameters_RCD <- as.data.frame(Parameters_RCD)
Parameters_H <- read_excel(dat, sheet = "Parameters_H")
Parameters_H <- as.data.frame(Parameters_H)
Parameters_RCD2H <- read_excel(dat, sheet = "Parameters_RCD2H")
Parameters_RCD2H <- as.data.frame(Parameters_RCD2H)
Citations <- read_excel(dat, sheet = "Citations")
Citations <- as.data.frame(Citations)
Corrections <- read_excel(dat, sheet = "Corrections")
Corrections <- as.data.frame(Corrections)
Conifers <- read_excel(dat, sheet = "Conifers")
Conifers <- as.data.frame(Conifers)
usethis::use_data(Parameters_RCD, name = "Parameters_RCD", mtcars, internal = TRUE)
usethis::use_data(Parameters_H, name = "Parameters_H", mtcars, internal = TRUE)
usethis::use_data(Parameters_RCD2H, name = "Parameters_RCD2H", mtcars, internal = TRUE)
usethis::use_data(Citations, name = "Citations", mtcars, internal = TRUE)
usethis::use_data(Corrections, name = "Corrections", mtcars, internal = TRUE)
usethis::use_data(Conifers, name = "Conifers", mtcars, internal = TRUE)
Citations$Bibtex <- apply(Citations$Bibtex, FUN = gsub("\\n", "\n", x))
for(i in 1:nrow(Citations)){
Citations$Bibtex[i] <- gsub("\\n", "\n", Citations$Bibtex[i])
}
library("readxl")
dat <- "C:/Users/Manuel/Nextcloud/Geobotanik/dat/Biomass_estimation.xlsx"
Parameters_RCD <- read_excel(dat, sheet = "Parameters_RCD")
Parameters_RCD <- as.data.frame(Parameters_RCD)
Parameters_H <- read_excel(dat, sheet = "Parameters_H")
Parameters_H <- as.data.frame(Parameters_H)
Parameters_RCD2H <- read_excel(dat, sheet = "Parameters_RCD2H")
Parameters_RCD2H <- as.data.frame(Parameters_RCD2H)
Citations <- read_excel(dat, sheet = "Citations")
Citations <- as.data.frame(Citations)
Corrections <- read_excel(dat, sheet = "Corrections")
Corrections <- as.data.frame(Corrections)
Conifers <- read_excel(dat, sheet = "Conifers")
Conifers <- as.data.frame(Conifers)
usethis::use_data(Parameters_RCD, name = "Parameters_RCD", mtcars, internal = TRUE)
usethis::use_data(Parameters_H, name = "Parameters_H", mtcars, internal = TRUE)
usethis::use_data(Parameters_RCD2H, name = "Parameters_RCD2H", mtcars, internal = TRUE)
usethis::use_data(Citations, name = "Citations", mtcars, internal = TRUE)
usethis::use_data(Corrections, name = "Corrections", mtcars, internal = TRUE)
usethis::use_data(Conifers, name = "Conifers", mtcars, internal = TRUE)
for(i in 1:nrow(Citations)){
Citations$Bibtex[i] <- gsub("\\n", "\n", Citations$Bibtex[i])
}
usethis::use_data(Parameters_RCD, name = Parameters_RCD, mtcars, internal = TRUE)
usethis::use_data(Parameters_H, mtcars, internal = TRUE)
usethis::use_data(Parameters_RCD2H, mtcars, internal = TRUE)
usethis::use_data(Citations, mtcars, internal = TRUE)
usethis::use_data(Corrections, mtcars, internal = TRUE)
usethis::use_data(Conifers, mtcars, internal = TRUE)
usethis::use_data(Parameters_RCD, Parameters_H, Parameters_H,
Parameters_RCD2H, Citations, Corrections, Conifers,
internal = TRUE, overwrite = TRUE)
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
Sys.which("make")
use_mit_license()
usethis::use_mit_license()
usethis::use_mit_license(copyright_holder = "Manuel Popp")
options(usethis.full_name = "Manuel Richard Popp")
usethis::use_mit_license()
library(devtools)
find_rtools(T)
require("devtools")
install_github("ManuelPopp/BiomassEST")
est.bm("Abies alba", H = 140)
require("BiomassEST")
est.bm("Abies alba", H = 140)
est.bm("Abies alba", RCD = 40)
est.bm("Abies alba", RCD = 40, H_meas = 10)
est.bm(c("Abies alba", "Abies alba", "Abies alba"), RCD = c(40, 50, 60), H_meas = 10)
est.bm(c("Abies alba", "Abies alba", "Abies alba"), RCD = c(40, 50, 60), H_meas = c(10, 10, 10))
est.bm(c("Abies alba", "Abies alba", "Quercus robur"), RCD = c(40, 50, 60), H_meas = c(10, 10, 10))
est.bm(c("Abies alba", "Abies alba", "Quercus robur"), RCD = c(40, 50, 60), H = c(120, 130, 130), H_meas = c(10, 10, 10))
est.bm(c("Abies alba", "Abies alba", "Quercus robur"), RCD = c(40, 50, NA), H = c(120, 130, 130), H_meas = c(10, 10, 10))
require("devtools")
install_github("ManuelPopp/BiomassEST")
require("BiomassEST")
est.bm(c("Abies alba", "Abies alba", "Quercus robur"), RCD = c(40, 50, NA), H = c(120, 130, 130), H_meas = c(10, 10, 10))
require("devtools")
install_github("ManuelPopp/BiomassEST")
est.bm.RCD2H(Species = Species, RCD = RCD, H = H, H_meas = H_meas)
est.bm(c("Abies alba", "Abies alba", "Quercus rubra"), RCD = c(12, 15, 16), H = c(100, NA, 250), H_meas = 10)
require("BiomassEST")
est.bm(c("Abies alba", "Abies alba", "Quercus rubra"), RCD = c(12, 15, 16), H = c(100, NA, 250), H_meas = 10)
est.bm(c("Abies alba", "Abies alba", "Quercus rubra"), RCD = c(12, 15, 16), H = c(100, 130, 250), H_meas = 10)
est.bm(c("Abies alba", "Abies alba", "Quercus rubra"), RCD = c(12, 15, 16), H = c(100, 130, 250), H_meas = 10, use = "RCD")
est.bm(c("Abies alba", "Abies alba", "Quercus rubra"), RCD = c(12, 15, 16), H = c(100, 130, 250), H_meas = 10, use = "H")
est.bm(c("Abies alba", "Abies alba", "Quercus rubra"), RCD = c(12, 15, 16), H = c(100, 130, 250), H_meas = 10, use = c("H", "RCD", "H"))
est.bm(c("Abies alba", "Abies alba", "Quercus rubra"), RCD = c(12, 15, 16), H = c(100, 130, 250), H_meas = c(10, 10, 10), use = c("H", "RCD", "H"))
require("devtools")
install_github("ManuelPopp/BiomassEST")
require("BiomassEST")
est.bm(c("Abies alba", "Quercus robur", "Abies alba"), RCD = c(15, 14, 12), H = c(130, 120, 110), H_meas = 10)
est.bm(c("Abies alba", "Quercus robur", "Abies alba"), RCD = c(15, 14, 12), H = c(130, 120, 110), H_meas = 10, use = "RCD")
est.bm(c("Abies alba", "Quercus robur", "Abies alba"), RCD = c(15, 14, 12), H = c(130, 120, 110), H_meas = 10, use = "H")
est.bm(c("Abies alba", "Quercus robur", "Abies alba"), RCD = c(15, 14, 12), H = c(130, 120, 110), H_meas = 10, use = c("H", "RCD", "H"))
require("devtools")
install_github("BiomassEST")
install_github("ManuelPopp/BiomassEST")
require("BiomassEST")
est.bm(c("Abies alba", "Quercus robur", "Abies alba"), RCD = c(15, 14, 12), H = c(130, 120, 110), H_meas = 10, use = c("H", "RCD", "H"))
est.bm(c("Abies alba", "Quercus robur", "Abies alba"), RCD = c(15, 14, 12), H = c(130, 120, 110), H_meas = 10, use = "H")
est.bm(c("Abies alba", "Quercus robur", "Abies alba"), RCD = c(15, 14, 12), H = c(130, 120, 110), H_meas = 10, use = "RCD")
est.bm(c("Abies alba", "Quercus robur", "Abies alba"), RCD = c(15, 14, 12), H = c(130, 120, 110), H_meas = 10)
est.bm(c("Abies alba", "Quercus robur", "Abies alba"), RCD = c(15, 14, 12), H = c(130, 120, 110), H_meas = 10, use = "RCD2H")
est.bm("Abies alba", RCD = 15, H = c130, H_meas = 10, use = "RCD2H")
est.bm("Abies alba", RCD = 15, H = 130, H_meas = 10, use = "RCD2H")
est.bm("Abies alba", RCD = 15, H = 130, H_meas = 10, use = "H")
est.bm("Abies alba", RCD = 15, H = 130, H_meas = 10, use = "RCD")
est.bm("Abies alba", RCD = 15, H = 130, H_meas = 10)
est.bm("Abies alba", RCD = 15, H = 130)
est.bm("Abies alba", H = 130)
est.bm("Abies alba", RCD = 130, H_meas = 10)
est.bm("Abies alba", RCD = 15, H = c130, H_meas = 10, use = "RCD")
est.bm("Abies alba", RCD = 15, H = 130, H_meas = 10, use = "RCD")
est.bm("Abies alba", RCD = 130, H = 130, H_meas = 10, use = "RCD")
require("devtools")
install_githuba("ManuelPOpp/BiomassEST")
install_githuba("ManuelPopp/BiomassEST")
install_github("ManuelPopp/BiomassEST")
require("BiomassEST")
est.bm("Abies alba", RCD = 130, H = 130, H_meas = 10, use = "RCD")
est.bm("Abies alba", RCD = 130, H = 130, use = "RCD")
require("BiomassEST")
cite("Abies alba")
cite.datasource("Abies alba")
get(paste("BiomassEST:::Parameters", Parameter, sep = "_"))
Parameter = "RCD"
get(paste("BiomassEST:::Parameters", Parameter, sep = "_"))
BiomassEST:::Parameters_RCD
?get
get(paste("Parameters", Parameter, sep = "_"))
require("devtools")
install_github("ManuelPopp/BiomassEST")
cite.datasource("Abies alba")
require("BiomassEST")
cite.datasource("Abies alba")
cite.datasource("Abies")
require("devtools")
install_github("ManuelPopp/BiomassEST")
cite.datasource("Abies alba")
require("BiomassEST")
cite.datasource("Abies alba")
cite.datasource("Annighöfer")
cite.datasource(Author = "Annighöfer")
cite.datasource(Author = "Annighoefer")
BiomassEST:::Citations
cite.datasource(Author = "Anninghoefer")
BiomassEST:::Citations$Citekey[which(BiomassEST:::Citations$AuthorFirst == Author)[1]]
Author <- "Anninghoefer"
BiomassEST:::Citations$Citekey[which(BiomassEST:::Citations$AuthorFirst == Author)[1]]
Author <- "Anninghofer"
BiomassEST:::Citations$Citekey[which(BiomassEST:::Citations$AuthorFirst == Author)[1]]
unique(BiomassEST:::Citations$AuthorFirst)
warning("Unknown species. List of species:\n", unique(BiomassEST:::Citations$AuthorFirst))
Parameter = "RCD"
dataset <- get(paste("Parameters", Parameter, sep = "_"))
dataset
paste(dataset$Genus, dataset$Epithet)
unique(paste(dataset$Genus, dataset$Epithet))
warning("Unknown species. List of species:\n", unique(paste(dataset$Genus, dataset$Epithet)))
warning("Unknown species. List of species:\n", paste(dataset$Genus, dataset$Epithet))
warning("Unknown species. List of species:\n", paste(dataset$Genus, dataset$Epithet, sep = ", "))
warning("Unknown species. List of species:\n", paste(dataset$Genus, dataset$Epithet, collapse = ","))
warning("Unknown species. List of species:\n", paste(dataset$Genus, dataset$Epithet, collapse = ", "))
warning("Unknown species. Currently supported species:\n", paste(dataset$Genus, dataset$Epithet, collapse = ", "))
BiomassEST:::Parameters_RCD$Genus
require("devtools")
install_github("ManuelPopp/BiomassEST")
est.bm("Acer platanoides", H = 100)
require("BiomassEST")
est.bm("Acer platanoides", H = 100)
est.bm("Abies alba", H = 100)
Species <- "Acer platanoides"
Genus <- strsplit(Species, "[ _]")[[1]][1]
Epithet <- strsplit(Species, "[ _]")[[1]][2]
BiomassEST:::Parameters_H$Genus == Genus
BiomassEST:::Parameters_H$Genus == Genus &
BiomassEST:::Parameters_H$Epithet == Epithet
b1 <- BiomassEST:::Parameters_H$beta_1[BiomassEST:::Parameters_H$Genus == Genus &
BiomassEST:::Parameters_H$Epithet == Epithet]
b1
length(b1) < 1
require("devtools")
install_github("ManuelPopp/BiomassEST")
require("BiomassEST")
est.bm("Abies alba", H = 100)
est.bm("Abies alb", H = 100)
est.bm("Abies alba", H = 100, RCD = 20)
est.bm("Abies alba", H = 100, RCD = 20, H_meas = 10)
est.bm("Abies alba", H = 100, RCD = 20, H_meas = 10, use = "H")
est.bm("Abies alba", H = 100, RCD = 20, H_meas = 10, use = "RCD")
est.bm("Abies alba", H = 100, RCD = 20, H_meas = 10, use = "RCD2H")
require("devtools")
install_github("ManuelPopp/BiomassEST")
require("ManuelPopp/BiomassEST")
require("BiomassEST")
bm.est("ABies alba", H = 120, RCD = 15)
est.bm("ABies alba", H = 120, RCD = 15)
est.bm("Abies alba", H = 120, RCD = 15)
est.bm("Abies alba", H = 120, RCD = 15, use = "H")
est.bm("Abies alba", H = 120, RCD = 15, H_meas = 10, use = "RCD")
est.bm("Abies alba", H = 120, RCD = 15, H_meas = 10, use = "RCD2H")
est.bm("Abies alba", H = 120, RCD = 15, H_meas = 10)
est.bm("Abies alba", H = 120, RCD = 15)
est.bm("Abies alba", H = c(120, 20, 50), RCD = c(15, 30, 35), H_meas = 10)
est.bm(c("Abies alba", "Abies alba", "Abies alba"), H = c(120, 20, 50), RCD = c(15, 30, 35), H_meas = 10)
est.bm(c("Abies alba", "Abies alba", "Abies alba"), H = c(120, 20, 50), RCD = c(15, 30, 35))
est.bm(c("Abies alba", "Abies alba", "Abies alba"), H = c(120, 20, 50), RCD = c(15, 30, 35), H_meas = 10, use = "H")
est.bm(c("Abies alba", "Abies alba", "Abies alba"), H = c(120, 20, 50), RCD = c(15, 30, 35), H_meas = 10, use = "RCD")
est.bm(c("Abies alba", "Abies alba", "Abies alba"), RCD = c(15, 30, 35), H_meas = 10)
est.bm(c("Abies alba", "Abies alba", "Abies alba"), H = c(120, 20, 50), RCD = c(15, 30, 35), H_meas = 10)
est.bm(c("Abies alba", "Abies alba", "Abies alba"), H = c(120, 20, 50), RCD = c(15, 30, 35), H_meas = c(10, 5, 130))
require("devtools")
install_github("ManuelPopp/BiomassEST")
require("BiomassEST")
est.bm(c("Abies alba", "Abies alba", "Abies alba"), H = c(120, 20, 50), RCD = c(15, 30, 35), H_meas = 10)
est.bm(c("Abies alba", "Abies alba", "Abies alba"), H = c(120, 20, 50), RCD = c(15, 30, 35))
all(use == "H")
use <- NA
all(use == "H")
use == "H"
anyNA(use)
est.bm <- function(Species, RCD = NA, BHD = NA, H = NA, use = NA, H_meas = NA){
if(all(is.na(RCD)) & !anyNA(BHD) & !anyNA(H_meas)){
RCD <- BHD
}
# Check if at least some parameters were provided
if(all(is.na(RCD)) & all(is.na(BHD)) & all(is.na(H))){
warning("No parameters set. Provide at least one (ore more) of the following: RCD or BHD including H_meas, H.")
}
# Error if neither H nor H_meas is provided
if(all(is.na(H)) & !is.numeric(H_meas)){
warning("Parameter H_meas not set. Please provide the height of your measurement.")
}
# See if RCD is provided in some cases without H_meas, but H is provided (-> estimate biomass only based on H in this case)
if(!anyNA(use)){
if(all(is.na(H_meas)) & !anyNA(H) & !all(is.na(RCD)) & !all(use == "H")){
warning("RCD provided but H_meas missing. Calculating based on H.")
use <- rep("H", length(Species))
}
}else{
if(all(is.na(H_meas)) & !anyNA(H) & !all(is.na(RCD))){
warning("RCD provided but H_meas missing. Calculating based on H.")
use <- rep("H", length(Species))
}
}
# Set use to opportunistic if no argument was set (estimate biomass utilising as many as possible of the given values)
if(all(is.na(use))){
use <- "opportunistic"
}
# If RCD is provided and H is missing or RCD was set explicitly: Estimate biomass based on RCD
if(is.numeric(RCD) & !is.numeric(H) | is.numeric(RCD) & all(use == "RCD")){
# Warning if H_meas is missing
if(anyNA(H_meas)){
warning("Mode RCD (explicitly set or no H provided) missing value: H_meas")
}
# Use H_meas for all instances in case only a single value (rather than a multi value vector) was provided
if(length(Species) > 1 & length(H_meas) == 1){
H_meas <- rep(H_meas, length(Species))
}
# Apply est.bm.RCD to all values
AGB <- mapply(FUN = BiomassEST::est.bm.RCD, Species = Species, RCD = RCD, H_meas = H_meas)
# If H is provided and RCD is missing or use of H was set explicitly: Estimate biomass based on H
}else if(is.numeric(H) & !is.numeric(RCD) | is.numeric(H) & all(use == "H")){
AGB <- mapply(FUN = BiomassEST::est.bm.H, Species = Species, H = H)
# If both, RCD and H are provided in at least some cases...
}else if(is.numeric(RCD) & is.numeric(H)){
# ...set H_meas for all instances if only provided once
if(length(Species) > 1 & length(H_meas) == 1){
H_meas <- rep(H_meas, length(Species))
}
# ...use RCD2H if all required values are provided without missing values
if(!anyNA(RCD) & !anyNA(H) & !anyNA(H_meas) & all(use == "opportunistic") | all(use == "RCD2H")){
AGB <- mapply(FUN = BiomassEST::est.bm.RCD2H, Species = Species, RCD = RCD, H = H, H_meas = H_meas)
# ...or print a warning, in case some values are missing
}else if(any(anyNA(RCD), anyNA(H), anyNA(H_meas)) & all(use == "opportunistic") | all(use == "RCD2H")){
warning("Data contains NA.")
AGB <- NA
# In case use was set to different values for each instance, use a loop
}else if(!all(use == "opportunistic") & !all(use == "RCD2H")){
AGB <- vector()
for(i in 1:length(Species)){
if(use[i] == "RCD"){
AGB[i] <- BiomassEST::est.bm.RCD(Species = Species[i], RCD = RCD[i], H_meas = H_meas[i])
}else if(use[i] == "H"){
AGB[i] <- BiomassEST::est.bm.H(Species = Species[i], H = H[i])
}else if(is.na(use[i]) | use == "RCD2H"){
AGB[i] <- BiomassEST::est.bm.RCD2H(Species = Species[i], RCD = RCD[i], H = H[i], H_meas = H_meas[i])
}
}
}
}
return(AGB)
}
est.bm("Abies alba", H = 100)
require("devtools")
install_github("BiomassEST")
install_github("ManuelPopp/BiomassEST")
require("BiomassEST")
est.bm("Abies alba", H = 100)
est.bm("Abies ala", H = 100)
est.bm("Abies alba", H = 100, RCD = 10)
est.bm("Abies alba", H = 100, RCD = 10, H_meas = 10)
est.bm("Abies alba", H = 100, RCD = 10, H_meas = 11)
warning("No correction factor for H_meas = ", H_meas, ".\nSupported values:\n", paste(unique(BiomassEST:::Corrections$Tx, collapse = ", ")))
H_meas = NA
warning("No correction factor for H_meas = ", H_meas, ".\nSupported values:\n", paste(unique(BiomassEST:::Corrections$Tx, collapse = ", ")))
warning("No correction factor for H_meas = ", H_meas, ".\nSupported values:\n",
paste(unique(BiomassEST:::Corrections$Height, collapse = ", ")))
warning("No correction factor for H_meas = ", H_meas, ".\nSupported values:\n",
paste(unique(BiomassEST:::Corrections$Height, sep = ", ")))
warning("No correction factor for H_meas = ", H_meas, ".\nSupported values:\n",
paste(unique(BiomassEST:::Corrections$Height, collapse = ", ")))
warning("No correction factor for H_meas = ", H_meas, ".\nSupported values:\n",
paste(unique(BiomassEST:::Corrections$Height), collapse = ", "))
Tx <- BiomassEST:::Corrections$Tx[Corrections$Height == H_meas & BiomassEST:::Corrections$Conifer == Conifer]
Conifer <- BiomassEST:::Conifers$Conifer[which(BiomassEST:::Conifers$Genus == Genus)[1]]
Species <- "Abies alba"
if(is.character(Species)){
Genus <- strsplit(Species, "[ _]")[[1]][1]
Epithet <- strsplit(Species, "[ _]")[[1]][2]
if(is.na(Epithet)){
Epithet <- "spec"
}
}else{
warning("Invalid Species argument: ", Species)
}
Conifer <- BiomassEST:::Conifers$Conifer[which(BiomassEST:::Conifers$Genus == Genus)[1]]
Tx <- BiomassEST:::Corrections$Tx[Corrections$Height == H_meas & BiomassEST:::Corrections$Conifer == Conifer]
Tx
length(Tx)
anyNA(Tx)
H_meas = 10
if(is.character(Species)){
Genus <- strsplit(Species, "[ _]")[[1]][1]
Epithet <- strsplit(Species, "[ _]")[[1]][2]
if(is.na(Epithet)){
Epithet <- "spec"
}
}else{
warning("Invalid Species argument: ", Species)
}
Conifer <- BiomassEST:::Conifers$Conifer[which(BiomassEST:::Conifers$Genus == Genus)[1]]
Tx <- BiomassEST:::Corrections$Tx[Corrections$Height == H_meas & BiomassEST:::Corrections$Conifer == Conifer]
length(Tx)
H_meas = 11
if(is.character(Species)){
Genus <- strsplit(Species, "[ _]")[[1]][1]
Epithet <- strsplit(Species, "[ _]")[[1]][2]
if(is.na(Epithet)){
Epithet <- "spec"
}
}else{
warning("Invalid Species argument: ", Species)
}
Conifer <- BiomassEST:::Conifers$Conifer[which(BiomassEST:::Conifers$Genus == Genus)[1]]
Tx <- BiomassEST:::Corrections$Tx[Corrections$Height == H_meas & BiomassEST:::Corrections$Conifer == Conifer]
length(Tx)
anyNA(H_meas)
H_meas <- NA
anyNA(H_meas)
